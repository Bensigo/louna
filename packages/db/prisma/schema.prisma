// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch"]
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model Profile {
  id      String   @id @default(uuid()) @db.VarChar(256)
  name    String   @db.VarChar(256)
  image   String?  @db.VarChar(256)
  email   String?  @db.VarChar(256)
  hasPref Boolean @default(false)
  hasHealthKitAuthorize Boolean @default(false)
  preference Preference?
  challengesCreated Challenge[]          @relation("CreatorChallenges")
  participations    ChallengeParticipation[]
  results ChallengeResult[]
}


model Preference {
  id  String      @id @default(uuid())
  userId String @unique
  age DateTime
  height Decimal
  weight Decimal
  intrest String[]
  user   Profile     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt     DateTime    @default(now()) @db.Timestamp(6)
  updatedAt     DateTime    @default(now()) @db.Timestamp(6) @updatedAt

  @@index([id], name: "idx_preference_id")
}
model ChallengeParticipation {
  id          String    @id @default(uuid())
  user        Profile      @relation(fields: [userId], references: [id])
  userId      String
  challenge   Challenge @relation(fields: [challengeId], references: [id])
  challengeId String
  joinedAt    DateTime  @default(now())
}

model ChallengeResult {
  id          String    @id @default(uuid())
  user        Profile      @relation(fields: [userId], references: [id])
  userId      String
  challenge   Challenge @relation(fields: [challengeId], references: [id])
  challengeId String
  result      Float
  recordedAt  DateTime  @default(now())
}

enum ChallengeType {
  MEDITATION
  BREATHWORK
  YOGA
  ICE_BATH
}
model Challenge {
  id                 String               @id @default(uuid())
  title              String?
  description        String?
  creator            Profile              @relation("CreatorChallenges", fields: [creatorId], references: [id])
  creatorId          String
  createdAt          DateTime             @default(now())
  imageUrl           String?
  startDate          DateTime
  endDate            DateTime
  type               ChallengeType
  goalType           GoalType?            // Nullable for free sessions
  goalValue          Float?               // Nullable for free sessions
  baselineValue      Float?               // Nullable for free sessions
  isFreeSession      Boolean              @default(false)  // Flag to indicate a free session
  interval           Interval?            // Nullable for free sessions
  participations     ChallengeParticipation[]
  results            ChallengeResult[]

  @@index([creatorId], name: "idx_challenge_creator")
  @@index([type], name: "idx_challenge_type")
  @@index([startDate], name: "idx_challenge_start_date")
  @@index([endDate], name: "idx_challenge_end_date")
}

enum Interval {
  DAILY
  WEEKLY
  MONTHLY
}



enum GoalType {
  HRV
  HEART_RATE
  RESTING_HEART_RATE
  DURATION          // New goal type for activities where duration matters
}
